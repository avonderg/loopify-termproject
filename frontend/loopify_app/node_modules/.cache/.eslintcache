[{"/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/index.tsx":"1","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/App.tsx":"2","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/reportWebVitals.ts":"3","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/RouteContainer.tsx":"4","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/Title.tsx":"5","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/QuoteContainer.tsx":"6","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/MapContainer.tsx":"7","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/Footer.tsx":"8","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/MotivationalQuote.tsx":"9"},{"size":554,"mtime":1652483637374,"results":"10","hashOfConfig":"11"},{"size":369,"mtime":1652483637371,"results":"12","hashOfConfig":"11"},{"size":425,"mtime":1652483637374,"results":"13","hashOfConfig":"11"},{"size":684,"mtime":1652483637372,"results":"14","hashOfConfig":"11"},{"size":734,"mtime":1652483637372,"results":"15","hashOfConfig":"11"},{"size":987,"mtime":1652483637372,"results":"16","hashOfConfig":"11"},{"size":5274,"mtime":1652483637371,"results":"17","hashOfConfig":"11"},{"size":614,"mtime":1652483637371,"results":"18","hashOfConfig":"11"},{"size":596,"mtime":1652483637372,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dguocp",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/index.tsx",[],[],"/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/App.tsx",[],[],"/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/reportWebVitals.ts",[],[],"/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/RouteContainer.tsx",["49","50"],[],"import React, {useState} from 'react';\nimport './RouteContainer.css'\nimport MapContainer from \"./MapContainer\";\nimport { Wrapper, Status } from \"@googlemaps/react-wrapper\";\nimport Footer from \"./Footer\";\n\n\nfunction RouteContainer() {\n\n    const apiKey = process.env.LOOPIFY_APP_KEY || \"\"\n\n    const render = (status: Status) => {\n        return <h1>{status}</h1>;\n    };\n\n    return (\n        <div className=\"RouteContainer\">\n\n            <h2> find a loop </h2>\n\n            <Wrapper apiKey={\"AIzaSyBl5KAwLFMirggDCvul35kcVDtFeIdRIe8\"} render={render}>\n                <MapContainer/>\n            </Wrapper>\n\n            <Footer/>\n        </div>\n\n    )\n}\nexport default RouteContainer;","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/Title.tsx",[],[],"/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/QuoteContainer.tsx",[],[],"/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/MapContainer.tsx",["51","52","53","54","55"],[],"import React, { useState } from \"react\";\nimport \"./MapContainer.css\";\n\n//https://developers.google.com/maps/documentation/javascript/react-map\n\ntype RouteInfo = {\n  distance: number;\n  coords: google.maps.LatLng[];\n};\n\nfunction MapContainer() {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  // @ts-ignore\n  const [map, setMap] = React.useState<google.maps.Map>(null);\n  const [miles, setMiles] = useState(0);\n  const [zoom, setZoom] = useState(15);\n  const [lat, setLat] = useState(41.8268);\n  const [lng, setLng] = useState(-71.4025);\n  const [dist, setDist] = useState(0);\n\n  let [path, setPath] = useState<google.maps.Polyline>(new google.maps.Polyline({\n    path: [], //route.coords,\n    geodesic: true,\n    strokeColor: \"#ea4435\",\n    strokeOpacity: 1,\n    strokeWeight: 5,}))\n  let loc: google.maps.Marker | null = null;\n\n  React.useEffect(() => {\n    if (ref.current && !map) {\n      setMap(\n          new window.google.maps.Map(ref.current, {\n            center: { lat: lat, lng: lng },\n            zoom: zoom,\n          })\n      );\n    }\n  }, [ref, map]);\n  path.setMap(map);\n\n  /**\n   * function that changes the mileage when the miles input box is changed.\n   * clears the current path on the map (if there is one) and sets the zoom and\n   * miles values\n   * @param miles input number\n   */\n  function sendMileage(miles: string) {\n    console.log(path.getPath());\n    path.setPath([]);\n\n    // reset mileage and zoom value\n    setMiles(+miles);\n    setZoom(15 - (0.5 * +miles));\n\n    // reset zoom level of map\n    map.setZoom(zoom);\n  }\n\n  /**\n   * function that clears the current route on the map, retrieves the\n   * new path's coordinates from the backend, and draws the new path\n   */\n  async function getRoute() {\n    path.setPath([]);\n\n    // if mileage inputted is greater than 0\n    if (miles != 0) {\n      // get route from backend\n      let info: RouteInfo = { distance: 0, coords: [] };\n      await getRouteInfo().then((value) => (info = value));\n      setDist(info.distance);\n\n      // [{ lat: 41.82564761175736, lng: -71.39906517404758 },\n      // { lat: 41.8274258402602, lng: -71.39933512294401 },\n      // { lat: 41.82728905520579, lng: -71.40056608991783 },\n      // { lat: 41.82558324056852, lng: -71.40037172671241 },\n      // { lat: 41.82564761175736, lng: -71.39906517404758 }]\n\n      // create new path's polyline\n      setPath(new google.maps.Polyline({\n        path: info.coords, //route.coords,\n        geodesic: true,\n        strokeColor: \"#ea4435\",\n        strokeOpacity: 1,\n        strokeWeight: 5,}));\n    }\n  }\n\n  /**\n   * Fetches route info from backend\n   */\n  async function getRouteInfo() {\n    return new Promise<RouteInfo>(async (resolve) => {\n      const userRouteRequest: number[] = [lat, lng, miles];\n      const res: Response = await fetch(\"http://localhost:4567/getRoute\", {\n        method: \"post\",\n        body: JSON.stringify(userRouteRequest),\n        headers: {\n          \"Content-Type\": \"application/json; charset=UTF-8\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      });\n      let route: RouteInfo = { distance: 0, coords: [] };\n      let routeData: void = await res.json().then((value) => {\n        route = value;\n      });\n      if (route.coords.length > 0) {\n        resolve(route);\n      }\n    });\n  }\n\n  /**\n   * function that retrieves user's current location\n   */\n  async function getCurLoc() {\n    path.setPath([]);\n\n    // remove previous marker\n    if (loc) {\n      loc.setMap(null);\n    }\n\n    console.log(\"CURRENT LOCATION: \" + loc)\n\n    if (navigator.geolocation) {\n      await accessLoc();\n\n      // create new marker\n      loc = new google.maps.Marker({ position: { lat: lat, lng: lng }});\n\n      // draw path on the map\n      loc.setMap(map);\n      map.setCenter({ lat, lng });\n    }\n  }\n\n  /**\n   * async function that return a promise after current location\n   * has been udpated to user's actual location\n   */\n  async function accessLoc() {\n    return new Promise<void>((resolve) => {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);},\n          (error) => console.log(\"location denied\"),\n          {enableHighAccuracy: false,\n            timeout: 5000,\n            maximumAge: 0}\n      );\n      if (lat != 41.82868 && lng != -71.4025) {\n        resolve();\n      }\n    });\n  }\n\n  return (\n      <div className=\"MapContainer\">\n        <label> base: </label>\n        <button\n            onClick={getCurLoc}\n            id=\"locationButton\"\n            style={{ cursor: \"pointer\" }}\n        >\n          {\" \"}\n          use my location{\" \"}\n        </button>{\" \"}\n        <br />\n        <label> miles: </label>\n        <input\n            type=\"number\"\n            min=\"0\"\n            onChange={(e) => sendMileage(e.target.value)}\n        />\n        <br />\n        <button id=\"goButton\" style={{ cursor: \"pointer\" }} onClick={getRoute}>\n          {\" \"}\n          go!{\" \"}\n        </button>{\" \"}\n        <br />\n        <div\n            id=\"map\"\n            style={{ height: \"400px\", width: \"600px\", margin: \"30px auto\" }}\n            ref={ref}\n        ></div>\n        <p id=\"distance\"> {Math.round(100 * dist) / 100} miles </p>\n      </div>\n  );\n}\nexport default MapContainer;\n","/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/Footer.tsx",[],[],"/Users/benpiekarz/Desktop/cs0200/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/loopify_app/src/components/MotivationalQuote.tsx",[],[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":24},{"ruleId":"56","severity":1,"message":"60","line":10,"column":11,"nodeType":"58","messageId":"59","endLine":10,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":39,"column":6,"nodeType":"63","endLine":39,"endColumn":16,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":68,"column":15,"nodeType":"67","messageId":"68","endLine":68,"endColumn":17},{"ruleId":"56","severity":1,"message":"69","line":105,"column":11,"nodeType":"58","messageId":"59","endLine":105,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":153,"column":15,"nodeType":"67","messageId":"68","endLine":153,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":153,"column":34,"nodeType":"67","messageId":"68","endLine":153,"endColumn":36},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'apiKey' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'lat', 'lng', and 'zoom'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMap' needs the current value of 'lat'.","ArrayExpression",["70"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'routeData' is assigned a value but never used.",{"desc":"71","fix":"72"},"Update the dependencies array to be: [ref, map, lat, lng, zoom]",{"range":"73","text":"74"},[1059,1069],"[ref, map, lat, lng, zoom]"]