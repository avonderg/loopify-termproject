{"ast":null,"code":"var _jsxFileName = \"/Users/benpiekarz/Desktop/cs32/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/table-visualization/src/components/DisplayTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddRow from \"./AddRow\";\nimport UpdateRow from \"./UpdateRow\";\nimport DeleteRow from \"./DeleteRow\";\nimport \"./DisplayTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * This function, used a component within the TableViz component, handles displaying\n * the actual table.\n * @param props\n * @returns\n */\nexport default function DisplayTable(props) {\n  _s();\n\n  const items = [];\n\n  function initializeItems(rowsToDisplay) {\n    for (const row of props.tableData.rows) {\n      items.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [getValue(row), /*#__PURE__*/_jsxDEV(UpdateRow, {\n          tName: props.tableName,\n          headerNames: props.tableData.headers,\n          row: row,\n          loadTable: props.loadTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DeleteRow, {\n          tName: props.tableName,\n          headerNames: props.tableData.headers,\n          row: row,\n          loadTable: props.loadTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  function getValue(row) {\n    const rowSingles = [];\n\n    for (const header of props.tableData.headers) {\n      rowSingles.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"border\",\n        children: [row[header], \" \"]\n      }, row[header], true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this));\n    }\n\n    return rowSingles;\n  }\n\n  const [rowsToDisplay, setRowsToDisplay] = useState(initializeItems(props.tableData.rows));\n  let headerToSortBy = props.tableData.headers[0];\n  const tableHeaders = props.tableData.headers.map(header => /*#__PURE__*/_jsxDEV(\"td\", {\n    id: \"header\",\n    className: \"border\",\n    onClick: e => {\n      sortBy(header);\n    },\n    children: header\n  }, header, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this));\n  const headerSortedAscending = new Map();\n  props.tableData.headers.forEach(header => {\n    headerSortedAscending.set(header, true);\n  });\n\n  function sortBy(header) {\n    //for each header: create an ascending or descending var to check which way to sort by\n    if (props.tableData.rows.length == 0) {\n      //no need to run this function for a table with no rows\n      return;\n    }\n\n    headerToSortBy = header;\n    let newItemsArr = props.tableData.rows;\n    let sortedAscending = false;\n\n    if (/^\\d+$/.test(newItemsArr[1][headerToSortBy])) {\n      for (let i = 0; i < newItemsArr.length - 1; i++) {\n        if (parseInt(newItemsArr[i][headerToSortBy]) < parseInt(newItemsArr[i + 1][headerToSortBy])) {\n          sortedAscending = true;\n          break;\n        }\n      }\n    } else {\n      for (let i = 0; i < newItemsArr.length - 1; i++) {\n        if (newItemsArr[i][headerToSortBy] < newItemsArr[i + 1][headerToSortBy]) {\n          sortedAscending = true;\n          break;\n        }\n      }\n    }\n\n    if (sortedAscending) {\n      newItemsArr.sort(compareDescending); // console.log(\"here\")\n\n      headerSortedAscending.set(header, false);\n    } else {\n      newItemsArr.sort(compareAscending);\n      headerSortedAscending.set(header, true);\n    }\n\n    initializeItems(newItemsArr);\n    setRowsToDisplay(items);\n  }\n\n  function compareAscending(row1, row2) {\n    if (/^\\d+$/.test(row1[headerToSortBy])) {\n      if (parseInt(row1[headerToSortBy]) < parseInt(row2[headerToSortBy])) {\n        return -1;\n      }\n\n      if (parseInt(row1[headerToSortBy]) > parseInt(row2[headerToSortBy])) {\n        return 1;\n      }\n\n      return 0;\n    } else {\n      if (row1[headerToSortBy] < row2[headerToSortBy]) {\n        return -1;\n      }\n\n      if (row1[headerToSortBy] > row2[headerToSortBy]) {\n        return 1;\n      }\n\n      return 0;\n    }\n  }\n\n  function compareDescending(row1, row2) {\n    if (/^\\d+$/.test(row1[headerToSortBy])) {\n      if (parseInt(row1[headerToSortBy]) > parseInt(row2[headerToSortBy])) {\n        return -1;\n      }\n\n      if (parseInt(row1[headerToSortBy]) < parseInt(row2[headerToSortBy])) {\n        return 1;\n      }\n\n      return 0;\n    } else {\n      if (row1[headerToSortBy] > row2[headerToSortBy]) {\n        return -1;\n      }\n\n      if (row1[headerToSortBy] < row2[headerToSortBy]) {\n        return 1;\n      }\n\n      return 0;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"primaryTable\",\n      style: {\n        marginBottom: \"1%\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        id: \"headers\",\n        className: \"border\",\n        children: tableHeaders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), items]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), props.tableDisplaying && /*#__PURE__*/_jsxDEV(AddRow, {\n      headerNames: props.tableData.headers,\n      tName: props.tableName,\n      loadTable: props.loadTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DisplayTable, \"UAmkR3rmh4RBgMItbzzxnOu268U=\");\n\n_c = DisplayTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTable\");","map":{"version":3,"sources":["/Users/benpiekarz/Desktop/cs32/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/table-visualization/src/components/DisplayTable.tsx"],"names":["React","useState","AddRow","UpdateRow","DeleteRow","DisplayTable","props","items","initializeItems","rowsToDisplay","row","tableData","rows","push","getValue","tableName","headers","loadTable","rowSingles","header","setRowsToDisplay","headerToSortBy","tableHeaders","map","e","sortBy","headerSortedAscending","Map","forEach","set","length","newItemsArr","sortedAscending","test","i","parseInt","sort","compareDescending","compareAscending","row1","row2","marginBottom","color","tableDisplaying"],"mappings":"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","sourcesContent":["import { getValue } from \"@testing-library/user-event/dist/utils\";\nimport { stringify } from \"querystring\";\nimport React, { useEffect, useState } from \"react\";\nimport { text } from \"stream/consumers\";\nimport AddRow from \"./AddRow\";\nimport UpdateRow from \"./UpdateRow\";\nimport DeleteRow from \"./DeleteRow\";\nimport \"./DisplayTable.css\";\n\ntype Table = {\n  name: string;\n  headers: string[];\n  rows: Record<string, string>[];\n};\n\ntype Row = {\n  id: number;\n  data: string[];\n};\n\n/**\n * This function, used a component within the TableViz component, handles displaying\n * the actual table.\n * @param props\n * @returns\n */\nexport default function DisplayTable(props: {\n  tableName: string;\n  tableDisplaying: boolean;\n  tableData: Table;\n  loadTable: Function;\n}) {\n  const items: any = [];\n  function initializeItems(rowsToDisplay: Record<string, string>[]) {\n    for (const row of props.tableData.rows) {\n      items.push(\n        <tr>\n          {getValue(row)}\n          <UpdateRow\n            tName={props.tableName}\n            headerNames={props.tableData.headers}\n            row={row}\n            loadTable={props.loadTable}\n          />\n          <DeleteRow\n            tName={props.tableName}\n            headerNames={props.tableData.headers}\n            row={row}\n            loadTable={props.loadTable}\n          />\n        </tr>\n      );\n    }\n  }\n\n  function getValue(row: Record<string, string>) {\n    const rowSingles = [];\n    for (const header of props.tableData.headers) {\n      rowSingles.push(\n        <td className=\"border\" key={row[header]}>\n          {row[header]}{\" \"}\n        </td>\n      );\n    }\n    return rowSingles;\n  }\n\n  const [rowsToDisplay, setRowsToDisplay] = useState(\n    initializeItems(props.tableData.rows)\n  );\n  let headerToSortBy = props.tableData.headers[0];\n\n  const tableHeaders = props.tableData.headers.map((header: string) => (\n    <td\n      id=\"header\"\n      className=\"border\"\n      key={header}\n      onClick={(e) => {\n        sortBy(header);\n      }}\n    >\n      {header}\n    </td>\n  ));\n\n  const headerSortedAscending: Map<string, boolean> = new Map();\n  props.tableData.headers.forEach((header) => {\n    headerSortedAscending.set(header, true);\n  });\n\n  function sortBy(header: string) {\n    //for each header: create an ascending or descending var to check which way to sort by\n    if (props.tableData.rows.length == 0) {\n      //no need to run this function for a table with no rows\n      return;\n    }\n    headerToSortBy = header;\n    let newItemsArr = props.tableData.rows;\n    let sortedAscending: boolean = false;\n    if (/^\\d+$/.test(newItemsArr[1][headerToSortBy])) {\n\n      for (let i = 0; i < newItemsArr.length - 1; i++) {\n        if (\n          parseInt(newItemsArr[i][headerToSortBy]) <\n          parseInt(newItemsArr[i + 1][headerToSortBy])\n        ) {\n          sortedAscending = true;\n          break;\n        }\n      }\n    } else {\n      for (let i = 0; i < newItemsArr.length - 1; i++) {\n        if (\n          newItemsArr[i][headerToSortBy] < newItemsArr[i + 1][headerToSortBy]\n        ) {\n          sortedAscending = true;\n          break;\n        }\n      }\n    }\n\n    if (sortedAscending) {\n      newItemsArr.sort(compareDescending);\n      // console.log(\"here\")\n      headerSortedAscending.set(header, false);\n    } else {\n      newItemsArr.sort(compareAscending);\n      headerSortedAscending.set(header, true);\n    }\n    initializeItems(newItemsArr);\n    setRowsToDisplay(items);\n  }\n\n  function compareAscending(\n    row1: Record<string, string>,\n    row2: Record<string, string>\n  ) {\n    if (/^\\d+$/.test(row1[headerToSortBy])) {\n      if (parseInt(row1[headerToSortBy]) < parseInt(row2[headerToSortBy])) {\n        return -1;\n      }\n      if (parseInt(row1[headerToSortBy]) > parseInt(row2[headerToSortBy])) {\n        return 1;\n      }\n      return 0;\n    } else {\n      if (row1[headerToSortBy] < row2[headerToSortBy]) {\n        return -1;\n      }\n      if (row1[headerToSortBy] > row2[headerToSortBy]) {\n        return 1;\n      }\n      return 0;\n    }\n  }\n\n  function compareDescending(\n    row1: Record<string, string>,\n    row2: Record<string, string>\n  ) {\n    if (/^\\d+$/.test(row1[headerToSortBy])) {\n      if (parseInt(row1[headerToSortBy]) > parseInt(row2[headerToSortBy])) {\n        return -1;\n      }\n      if (parseInt(row1[headerToSortBy]) < parseInt(row2[headerToSortBy])) {\n        return 1;\n      }\n      return 0;\n    } else {\n      if (row1[headerToSortBy] > row2[headerToSortBy]) {\n        return -1;\n      }\n      if (row1[headerToSortBy] < row2[headerToSortBy]) {\n        return 1;\n      }\n      return 0;\n    }\n  }\n\n  return (\n    <div id=\"content\">\n      <table id=\"primaryTable\" style={{ marginBottom: \"1%\", color: \"white\" }}>\n        <tr id=\"headers\" className=\"border\">\n          {tableHeaders}\n        </tr>\n        {items}\n      </table>\n      {props.tableDisplaying && (\n        <AddRow\n          headerNames={props.tableData.headers}\n          tName={props.tableName}\n          loadTable={props.loadTable}\n        ></AddRow>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}