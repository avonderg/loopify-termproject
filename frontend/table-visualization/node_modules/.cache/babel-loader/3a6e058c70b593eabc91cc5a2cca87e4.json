{"ast":null,"code":"var _jsxFileName = \"/Users/benpiekarz/Desktop/cs32/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/table-visualization/src/components/UpdateRow.tsx\";\nimport React from \"react\";\nimport \"./DisplayTable.css\";\n/**\n * This component handles the updating functionality and graphics for each row.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateRow(props) {\n  const originalData = new Map();\n  const updateData = new Map(); //set up the original and updated row hashmaps to be used for the update API call\n\n  for (const name of props.headerNames) {\n    originalData.set(name, props.row[name]);\n    updateData.set(name, props.row[name]);\n  } //fills in the update map with the values to update\n\n\n  const update = (header, value) => {\n    updateData.set(header, value);\n  }; //send the post API request to the update endpoint\n\n\n  const sendReq = async () => {\n    const addPostParams = {\n      tableName: props.tName,\n      colNameToOldVal: Object.fromEntries(originalData),\n      colNameToNewVal: Object.fromEntries(updateData)\n    };\n    const res = await fetch(\"http://localhost:4567/update\", {\n      method: \"post\",\n      body: JSON.stringify(addPostParams),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }); // gets resp msg\n\n    let msg = await res.json();\n    props.loadTable(props.tName);\n  }; //html outline for the updates to return\n\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [props.headerNames.map(header => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: props.row[header],\n        onChange: a => update(header, a.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendReq(),\n        children: \"Update Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = UpdateRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateRow\");","map":{"version":3,"sources":["/Users/benpiekarz/Desktop/cs32/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/table-visualization/src/components/UpdateRow.tsx"],"names":["React","UpdateRow","props","originalData","Map","updateData","name","headerNames","set","row","update","header","value","sendReq","addPostParams","tableName","tName","colNameToOldVal","Object","fromEntries","colNameToNewVal","res","fetch","method","body","JSON","stringify","headers","msg","json","loadTable","map","a","target"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAO,oBAAP;AAEA;AACA;AACA;;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAKZ;AACD,QAAMC,YAAiC,GAAG,IAAIC,GAAJ,EAA1C;AACA,QAAMC,UAA+B,GAAG,IAAID,GAAJ,EAAxC,CAFC,CAID;;AACA,OAAK,MAAME,IAAX,IAAmBJ,KAAK,CAACK,WAAzB,EAAsC;AACpCJ,IAAAA,YAAY,CAACK,GAAb,CAAiBF,IAAjB,EAAuBJ,KAAK,CAACO,GAAN,CAAUH,IAAV,CAAvB;AACAD,IAAAA,UAAU,CAACG,GAAX,CAAeF,IAAf,EAAqBJ,KAAK,CAACO,GAAN,CAAUH,IAAV,CAArB;AACD,GARA,CAUD;;;AACA,QAAMI,MAAgB,GAAG,CAACC,MAAD,EAAiBC,KAAjB,KAAmC;AAC1DP,IAAAA,UAAU,CAACG,GAAX,CAAeG,MAAf,EAAuBC,KAAvB;AACD,GAFD,CAXC,CAeD;;;AACA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,aAAa,GAAG;AACpBC,MAAAA,SAAS,EAAEb,KAAK,CAACc,KADG;AAEpBC,MAAAA,eAAe,EAAEC,MAAM,CAACC,WAAP,CAAmBhB,YAAnB,CAFG;AAGpBiB,MAAAA,eAAe,EAAEF,MAAM,CAACC,WAAP,CAAmBd,UAAnB;AAHG,KAAtB;AAMA,UAAMgB,GAAa,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AAChEC,MAAAA,MAAM,EAAE,MADwD;AAEhEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,aAAf,CAF0D;AAGhEa,MAAAA,OAAO,EAAE;AACP,wBAAgB,iCADT;AAEP,uCAA+B;AAFxB;AAHuD,KAAjC,CAAjC,CAP0B,CAgB1B;;AACA,QAAIC,GAAW,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAxB;AACA3B,IAAAA,KAAK,CAAC4B,SAAN,CAAgB5B,KAAK,CAACc,KAAtB;AACD,GAnBD,CAhBC,CAqCD;;;AACA,sBACE;AAAA,eACGd,KAAK,CAACK,WAAN,CAAkBwB,GAAlB,CAAuBpB,MAAD,iBACrB;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAET,KAAK,CAACO,GAAN,CAAUE,MAAV,CAFf;AAGE,QAAA,QAAQ,EAAGqB,CAAD,IAAOtB,MAAM,CAACC,MAAD,EAASqB,CAAC,CAACC,MAAF,CAASrB,KAAlB;AAHzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAUE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KA3DuBZ,S","sourcesContent":["import React, { useState } from \"react\";\nimport \"./DisplayTable.css\";\n\n/**\n * This component handles the updating functionality and graphics for each row.\n */\nexport default function UpdateRow(props: {\n  tName: string;\n  headerNames: string[];\n  row: Record<string, string>;\n  loadTable: Function;\n}) {\n  const originalData: Map<string, string> = new Map();\n  const updateData: Map<string, string> = new Map();\n\n  //set up the original and updated row hashmaps to be used for the update API call\n  for (const name of props.headerNames) {\n    originalData.set(name, props.row[name]);\n    updateData.set(name, props.row[name]);\n  }\n\n  //fills in the update map with the values to update\n  const update: Function = (header: string, value: string) => {\n    updateData.set(header, value);\n  };\n\n  //send the post API request to the update endpoint\n  const sendReq = async () => {\n    const addPostParams = {\n      tableName: props.tName,\n      colNameToOldVal: Object.fromEntries(originalData),\n      colNameToNewVal: Object.fromEntries(updateData),\n    };\n\n    const res: Response = await fetch(\"http://localhost:4567/update\", {\n      method: \"post\",\n      body: JSON.stringify(addPostParams),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    });\n\n    // gets resp msg\n    let msg: string = await res.json();\n    props.loadTable(props.tName);\n  };\n\n  //html outline for the updates to return\n  return (\n    <td>\n      {props.headerNames.map((header: string) => (\n        <td>\n          <input\n            type=\"text\"\n            placeholder={props.row[header]}\n            onChange={(a) => update(header, a.target.value)}\n          ></input>\n        </td>\n      ))}\n      <td>\n        <button onClick={() => sendReq()}>Update Row</button>\n      </td>\n    </td>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}