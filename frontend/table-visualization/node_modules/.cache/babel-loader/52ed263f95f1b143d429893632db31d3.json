{"ast":null,"code":"var _jsxFileName = \"/Users/benpiekarz/Desktop/cs32/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/table-visualization/src/components/AddRow.tsx\";\nimport React from \"react\";\n/**\n * This component handles the adding functionality and graphics for each row.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddRow(props) {\n  const entryData = new Map(); //set up the map representing the new row to be added\n\n  for (const name of props.headerNames) {\n    entryData.set(name, \"\");\n  } //updates the new row to be added according to user input in the text boxes\n\n\n  const update = (header, value) => {\n    entryData.set(header, value);\n  }; //sends the post API request to the add endpoint to add the row to the SQL database\n\n\n  const sendReq = async () => {\n    const addPostParams = {\n      tableName: props.tName,\n      entryData: Object.fromEntries(entryData)\n    };\n    const res = await fetch(\"http://localhost:4567/insert\", {\n      method: \"post\",\n      body: JSON.stringify(addPostParams),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }); // gets resp msg\n\n    let msg = await res.json();\n    props.loadTable(props.tName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    id: \"addRow\",\n    children: [props.headerNames.map(header => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: header,\n        onChange: a => update(header, a.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendReq(),\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c = AddRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRow\");","map":{"version":3,"sources":["/Users/benpiekarz/Desktop/cs32/term-project-avonderg-bpiekarz-jurrutic-kku2-sgundotr/frontend/table-visualization/src/components/AddRow.tsx"],"names":["React","AddRow","props","entryData","Map","name","headerNames","set","update","header","value","sendReq","addPostParams","tableName","tName","Object","fromEntries","res","fetch","method","body","JSON","stringify","headers","msg","json","loadTable","map","a","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;;;AACA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAIZ;AACD,QAAMC,SAA8B,GAAG,IAAIC,GAAJ,EAAvC,CADC,CAGD;;AACA,OAAK,MAAMC,IAAX,IAAmBH,KAAK,CAACI,WAAzB,EAAsC;AACpCH,IAAAA,SAAS,CAACI,GAAV,CAAcF,IAAd,EAAoB,EAApB;AACD,GANA,CAQD;;;AACA,QAAMG,MAAgB,GAAG,CAACC,MAAD,EAAiBC,KAAjB,KAAmC;AAC1DP,IAAAA,SAAS,CAACI,GAAV,CAAcE,MAAd,EAAsBC,KAAtB;AACD,GAFD,CATC,CAaD;;;AACA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,aAAa,GAAG;AACpBC,MAAAA,SAAS,EAAEX,KAAK,CAACY,KADG;AAEpBX,MAAAA,SAAS,EAAEY,MAAM,CAACC,WAAP,CAAmBb,SAAnB;AAFS,KAAtB;AAKA,UAAMc,GAAa,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AAChEC,MAAAA,MAAM,EAAE,MADwD;AAEhEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,aAAf,CAF0D;AAGhEW,MAAAA,OAAO,EAAE;AACP,wBAAgB,iCADT;AAEP,uCAA+B;AAFxB;AAHuD,KAAjC,CAAjC,CAN0B,CAe1B;;AACA,QAAIC,GAAW,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAxB;AAGAvB,IAAAA,KAAK,CAACwB,SAAN,CAAgBxB,KAAK,CAACY,KAAtB;AACD,GApBD;;AAsBA,sBACE;AAAI,IAAA,EAAE,EAAE,QAAR;AAAA,eACGZ,KAAK,CAACI,WAAN,CAAkBqB,GAAlB,CAAuBlB,MAAD,iBACrB;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAEA,MAFf;AAGE,QAAA,QAAQ,EAAGmB,CAAD,IAAOpB,MAAM,CAACC,MAAD,EAASmB,CAAC,CAACC,MAAF,CAASnB,KAAlB;AAHzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAUE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KAxDuBV,M","sourcesContent":["import React from \"react\";\n\n/**\n * This component handles the adding functionality and graphics for each row.\n */\nexport default function AddRow(props: {\n  tName: string;\n  headerNames: string[];\n  loadTable: Function;\n}) {\n  const entryData: Map<string, string> = new Map();\n\n  //set up the map representing the new row to be added\n  for (const name of props.headerNames) {\n    entryData.set(name, \"\");\n  }\n\n  //updates the new row to be added according to user input in the text boxes\n  const update: Function = (header: string, value: string) => {\n    entryData.set(header, value);\n  };\n\n  //sends the post API request to the add endpoint to add the row to the SQL database\n  const sendReq = async () => {\n    const addPostParams = {\n      tableName: props.tName,\n      entryData: Object.fromEntries(entryData),\n    };\n\n    const res: Response = await fetch(\"http://localhost:4567/insert\", {\n      method: \"post\",\n      body: JSON.stringify(addPostParams),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    });\n\n    // gets resp msg\n    let msg: string = await res.json();\n\n\n    props.loadTable(props.tName);\n  };\n\n  return (\n    <tr id={\"addRow\"}>\n      {props.headerNames.map((header: string) => (\n        <td>\n          <input\n            type=\"text\"\n            placeholder={header}\n            onChange={(a) => update(header, a.target.value)}\n          ></input>\n        </td>\n      ))}\n      <td>\n        <button onClick={() => sendReq()}>Add Row</button>\n      </td>\n    </tr>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}